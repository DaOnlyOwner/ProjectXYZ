// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FVector;
struct FDamageInformation;
#ifdef PROJECTXYZ_DamageAble_generated_h
#error "DamageAble.generated.h already included, missing '#pragma once' in DamageAble.h"
#endif
#define PROJECTXYZ_DamageAble_generated_h

#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_RPC_WRAPPERS \
	virtual float CalculateDamageForElementID_Implementation(ElementID id, int32 count, int32 rawDamage)=0; \
	virtual bool Shock_Implementation()=0; \
	virtual bool KnockDown_Implementation()=0; \
	virtual bool Push_Implementation(FVector const& direction)=0; \
	virtual bool ReceiveDamage_Implementation(FDamageInformation const& damageInformation)=0; \
 \
	DECLARE_FUNCTION(execCalculateDamageForElementID) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_id); \
		P_GET_PROPERTY(UIntProperty,Z_Param_count); \
		P_GET_PROPERTY(UIntProperty,Z_Param_rawDamage); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->CalculateDamageForElementID_Implementation(ElementID(Z_Param_id),Z_Param_count,Z_Param_rawDamage); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execShock) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->Shock_Implementation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execKnockDown) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->KnockDown_Implementation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execPush) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_direction); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->Push_Implementation(Z_Param_Out_direction); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execReceiveDamage) \
	{ \
		P_GET_STRUCT_REF(FDamageInformation,Z_Param_Out_damageInformation); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->ReceiveDamage_Implementation(Z_Param_Out_damageInformation); \
		P_NATIVE_END; \
	}


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_RPC_WRAPPERS_NO_PURE_DECLS \
	virtual float CalculateDamageForElementID_Implementation(ElementID id, int32 count, int32 rawDamage)=0; \
	virtual bool Shock_Implementation()=0; \
	virtual bool KnockDown_Implementation()=0; \
	virtual bool Push_Implementation(FVector const& direction)=0; \
	virtual bool ReceiveDamage_Implementation(FDamageInformation const& damageInformation)=0; \
 \
	DECLARE_FUNCTION(execCalculateDamageForElementID) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_id); \
		P_GET_PROPERTY(UIntProperty,Z_Param_count); \
		P_GET_PROPERTY(UIntProperty,Z_Param_rawDamage); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(float*)Z_Param__Result=this->CalculateDamageForElementID_Implementation(ElementID(Z_Param_id),Z_Param_count,Z_Param_rawDamage); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execShock) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->Shock_Implementation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execKnockDown) \
	{ \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->KnockDown_Implementation(); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execPush) \
	{ \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_direction); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->Push_Implementation(Z_Param_Out_direction); \
		P_NATIVE_END; \
	} \
 \
	DECLARE_FUNCTION(execReceiveDamage) \
	{ \
		P_GET_STRUCT_REF(FDamageInformation,Z_Param_Out_damageInformation); \
		P_FINISH; \
		P_NATIVE_BEGIN; \
		*(bool*)Z_Param__Result=this->ReceiveDamage_Implementation(Z_Param_Out_damageInformation); \
		P_NATIVE_END; \
	}


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_EVENT_PARMS \
	struct DamageAble_eventCalculateDamageForElementID_Parms \
	{ \
		ElementID id; \
		int32 count; \
		int32 rawDamage; \
		float ReturnValue; \
 \
		/** Constructor, initializes return property only **/ \
		DamageAble_eventCalculateDamageForElementID_Parms() \
			: ReturnValue(0) \
		{ \
		} \
	}; \
	struct DamageAble_eventKnockDown_Parms \
	{ \
		bool ReturnValue; \
 \
		/** Constructor, initializes return property only **/ \
		DamageAble_eventKnockDown_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	}; \
	struct DamageAble_eventPush_Parms \
	{ \
		FVector direction; \
		bool ReturnValue; \
 \
		/** Constructor, initializes return property only **/ \
		DamageAble_eventPush_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	}; \
	struct DamageAble_eventReceiveDamage_Parms \
	{ \
		FDamageInformation damageInformation; \
		bool ReturnValue; \
 \
		/** Constructor, initializes return property only **/ \
		DamageAble_eventReceiveDamage_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	}; \
	struct DamageAble_eventShock_Parms \
	{ \
		bool ReturnValue; \
 \
		/** Constructor, initializes return property only **/ \
		DamageAble_eventShock_Parms() \
			: ReturnValue(false) \
		{ \
		} \
	};


extern PROJECTXYZ_API  FName PROJECTXYZ_CalculateDamageForElementID;
extern PROJECTXYZ_API  FName PROJECTXYZ_KnockDown;
extern PROJECTXYZ_API  FName PROJECTXYZ_Push;
extern PROJECTXYZ_API  FName PROJECTXYZ_ReceiveDamage;
extern PROJECTXYZ_API  FName PROJECTXYZ_Shock;
#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_CALLBACK_WRAPPERS
#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	PROJECTXYZ_API UDamageAble(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UDamageAble) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(PROJECTXYZ_API, UDamageAble); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UDamageAble); \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	PROJECTXYZ_API UDamageAble(UDamageAble&&); \
	PROJECTXYZ_API UDamageAble(const UDamageAble&); \
public:


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	PROJECTXYZ_API UDamageAble(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private move- and copy-constructors, should never be used */ \
	PROJECTXYZ_API UDamageAble(UDamageAble&&); \
	PROJECTXYZ_API UDamageAble(const UDamageAble&); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(PROJECTXYZ_API, UDamageAble); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UDamageAble); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UDamageAble)


#undef GENERATED_UINTERFACE_BODY_COMMON
#define GENERATED_UINTERFACE_BODY_COMMON() \
	private: \
	static void StaticRegisterNativesUDamageAble(); \
	friend PROJECTXYZ_API class UClass* Z_Construct_UClass_UDamageAble(); \
public: \
	DECLARE_CLASS(UDamageAble, UInterface, COMPILED_IN_FLAGS(CLASS_Abstract | CLASS_Interface), 0, TEXT("/Script/ProjectXYZ"), PROJECTXYZ_API) \
	DECLARE_SERIALIZER(UDamageAble) \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_GENERATED_BODY_LEGACY \
		PRAGMA_DISABLE_DEPRECATION_WARNINGS \
	GENERATED_UINTERFACE_BODY_COMMON() \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_STANDARD_CONSTRUCTORS \
	PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_GENERATED_BODY \
	PRAGMA_DISABLE_DEPRECATION_WARNINGS \
	GENERATED_UINTERFACE_BODY_COMMON() \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_ENHANCED_CONSTRUCTORS \
private: \
	PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_INCLASS_IINTERFACE_NO_PURE_DECLS \
protected: \
	virtual ~IDamageAble() {} \
public: \
	typedef UDamageAble UClassType; \
	static float Execute_CalculateDamageForElementID(UObject* O, ElementID id, int32 count, int32 rawDamage); \
	static bool Execute_KnockDown(UObject* O); \
	static bool Execute_Push(UObject* O, FVector const& direction); \
	static bool Execute_ReceiveDamage(UObject* O, FDamageInformation const& damageInformation); \
	static bool Execute_Shock(UObject* O); \
	virtual UObject* _getUObject() const = 0;


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_INCLASS_IINTERFACE \
protected: \
	virtual ~IDamageAble() {} \
public: \
	typedef UDamageAble UClassType; \
	static float Execute_CalculateDamageForElementID(UObject* O, ElementID id, int32 count, int32 rawDamage); \
	static bool Execute_KnockDown(UObject* O); \
	static bool Execute_Push(UObject* O, FVector const& direction); \
	static bool Execute_ReceiveDamage(UObject* O, FDamageInformation const& damageInformation); \
	static bool Execute_Shock(UObject* O); \
	virtual UObject* _getUObject() const = 0;


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_8_PROLOG \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_EVENT_PARMS


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_19_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_RPC_WRAPPERS \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_CALLBACK_WRAPPERS \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_INCLASS_IINTERFACE \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define ProjectXYZ_Source_ProjectXYZ_DamageAble_h_19_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_RPC_WRAPPERS_NO_PURE_DECLS \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_CALLBACK_WRAPPERS \
	ProjectXYZ_Source_ProjectXYZ_DamageAble_h_11_INCLASS_IINTERFACE_NO_PURE_DECLS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID ProjectXYZ_Source_ProjectXYZ_DamageAble_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
