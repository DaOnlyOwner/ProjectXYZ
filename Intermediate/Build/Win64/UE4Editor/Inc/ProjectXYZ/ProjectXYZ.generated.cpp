// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ProjectXYZ.h"
#include "GeneratedCppIncludes.h"
#include "ProjectXYZ.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1ProjectXYZ() {}
FName PROJECTXYZ_CalculateDamageForElementID = FName(TEXT("CalculateDamageForElementID"));
FName PROJECTXYZ_KnockDown = FName(TEXT("KnockDown"));
FName PROJECTXYZ_Push = FName(TEXT("Push"));
FName PROJECTXYZ_ReceiveDamage = FName(TEXT("ReceiveDamage"));
FName PROJECTXYZ_Shock = FName(TEXT("Shock"));
static class UEnum* ElementID_StaticEnum()
{
	extern PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_ElementID();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ProjectXYZ_ElementID, Z_Construct_UPackage__Script_ProjectXYZ(), TEXT("ElementID"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ElementID(ElementID_StaticEnum, TEXT("/Script/ProjectXYZ"), TEXT("ElementID"), false, nullptr, nullptr);
class UScriptStruct* FDamageTable::StaticStruct()
{
	extern PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJECTXYZ_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageTable();
		extern PROJECTXYZ_API uint32 Get_Z_Construct_UScriptStruct_FDamageTable_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDamageTable, Z_Construct_UPackage__Script_ProjectXYZ(), TEXT("DamageTable"), sizeof(FDamageTable), Get_Z_Construct_UScriptStruct_FDamageTable_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDamageTable(FDamageTable::StaticStruct, TEXT("/Script/ProjectXYZ"), TEXT("DamageTable"), false, nullptr, nullptr);
static struct FScriptStruct_ProjectXYZ_StaticRegisterNativesFDamageTable
{
	FScriptStruct_ProjectXYZ_StaticRegisterNativesFDamageTable()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DamageTable")),new UScriptStruct::TCppStructOps<FDamageTable>);
	}
} ScriptStruct_ProjectXYZ_StaticRegisterNativesFDamageTable;
	void USpellTable::StaticRegisterNativesUSpellTable()
	{
	}
	IMPLEMENT_CLASS(USpellTable, 3142472312);
static class UEnum* Status_StaticEnum()
{
	extern PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_Status();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ProjectXYZ_Status, Z_Construct_UPackage__Script_ProjectXYZ(), TEXT("Status"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_Status(Status_StaticEnum, TEXT("/Script/ProjectXYZ"), TEXT("Status"), false, nullptr, nullptr);
static class UEnum* CharacterState_StaticEnum()
{
	extern PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_CharacterState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ProjectXYZ_CharacterState, Z_Construct_UPackage__Script_ProjectXYZ(), TEXT("CharacterState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_CharacterState(CharacterState_StaticEnum, TEXT("/Script/ProjectXYZ"), TEXT("CharacterState"), false, nullptr, nullptr);
	void APlayerCharacter::StaticRegisterNativesAPlayerCharacter()
	{
	}
	IMPLEMENT_CLASS(APlayerCharacter, 2618000608);
static class UEnum* SpellType_StaticEnum()
{
	extern PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_SpellType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_ProjectXYZ_SpellType, Z_Construct_UPackage__Script_ProjectXYZ(), TEXT("SpellType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SpellType(SpellType_StaticEnum, TEXT("/Script/ProjectXYZ"), TEXT("SpellType"), false, nullptr, nullptr);
class UScriptStruct* FDamageInformation::StaticStruct()
{
	extern PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern PROJECTXYZ_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageInformation();
		extern PROJECTXYZ_API uint32 Get_Z_Construct_UScriptStruct_FDamageInformation_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDamageInformation, Z_Construct_UPackage__Script_ProjectXYZ(), TEXT("DamageInformation"), sizeof(FDamageInformation), Get_Z_Construct_UScriptStruct_FDamageInformation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDamageInformation(FDamageInformation::StaticStruct, TEXT("/Script/ProjectXYZ"), TEXT("DamageInformation"), false, nullptr, nullptr);
static struct FScriptStruct_ProjectXYZ_StaticRegisterNativesFDamageInformation
{
	FScriptStruct_ProjectXYZ_StaticRegisterNativesFDamageInformation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DamageInformation")),new UScriptStruct::TCppStructOps<FDamageInformation>);
	}
} ScriptStruct_ProjectXYZ_StaticRegisterNativesFDamageInformation;
	void ASpell::StaticRegisterNativesASpell()
	{
	}
	IMPLEMENT_CLASS(ASpell, 2769393765);
	void ACustomGameState::StaticRegisterNativesACustomGameState()
	{
	}
	IMPLEMENT_CLASS(ACustomGameState, 1907050321);
	float IDamageAble::CalculateDamageForElementID(ElementID id, int32 count, int32 rawDamage)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_CalculateDamageForElementID instead.");
		DamageAble_eventCalculateDamageForElementID_Parms Parms;
		return Parms.ReturnValue;
	}
	bool IDamageAble::KnockDown()
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_KnockDown instead.");
		DamageAble_eventKnockDown_Parms Parms;
		return Parms.ReturnValue;
	}
	bool IDamageAble::Push(FVector const& direction)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_Push instead.");
		DamageAble_eventPush_Parms Parms;
		return Parms.ReturnValue;
	}
	bool IDamageAble::ReceiveDamage(FDamageInformation const& damageInformation)
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_ReceiveDamage instead.");
		DamageAble_eventReceiveDamage_Parms Parms;
		return Parms.ReturnValue;
	}
	bool IDamageAble::Shock()
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_Shock instead.");
		DamageAble_eventShock_Parms Parms;
		return Parms.ReturnValue;
	}
	void UDamageAble::StaticRegisterNativesUDamageAble()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDamageAble::StaticClass(), "CalculateDamageForElementID",(Native)&IDamageAble::execCalculateDamageForElementID);
		FNativeFunctionRegistrar::RegisterFunction(UDamageAble::StaticClass(), "KnockDown",(Native)&IDamageAble::execKnockDown);
		FNativeFunctionRegistrar::RegisterFunction(UDamageAble::StaticClass(), "Push",(Native)&IDamageAble::execPush);
		FNativeFunctionRegistrar::RegisterFunction(UDamageAble::StaticClass(), "ReceiveDamage",(Native)&IDamageAble::execReceiveDamage);
		FNativeFunctionRegistrar::RegisterFunction(UDamageAble::StaticClass(), "Shock",(Native)&IDamageAble::execShock);
	}
	IMPLEMENT_CLASS(UDamageAble, 2600851422);
	float IDamageAble::Execute_CalculateDamageForElementID(UObject* O, ElementID id, int32 count, int32 rawDamage)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UDamageAble::StaticClass()));
		DamageAble_eventCalculateDamageForElementID_Parms Parms;
		UFunction* const Func = O->FindFunction(PROJECTXYZ_CalculateDamageForElementID);
		if (Func)
		{
			Parms.id=id;
			Parms.count=count;
			Parms.rawDamage=rawDamage;
			O->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (IDamageAble*)(O->GetNativeInterfaceAddress(UDamageAble::StaticClass())))
		{
			Parms.ReturnValue = I->CalculateDamageForElementID_Implementation(id,count,rawDamage);
		}
		return Parms.ReturnValue;
	}
	bool IDamageAble::Execute_KnockDown(UObject* O)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UDamageAble::StaticClass()));
		DamageAble_eventKnockDown_Parms Parms;
		UFunction* const Func = O->FindFunction(PROJECTXYZ_KnockDown);
		if (Func)
		{
			O->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (IDamageAble*)(O->GetNativeInterfaceAddress(UDamageAble::StaticClass())))
		{
			Parms.ReturnValue = I->KnockDown_Implementation();
		}
		return Parms.ReturnValue;
	}
	bool IDamageAble::Execute_Push(UObject* O, FVector const& direction)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UDamageAble::StaticClass()));
		DamageAble_eventPush_Parms Parms;
		UFunction* const Func = O->FindFunction(PROJECTXYZ_Push);
		if (Func)
		{
			Parms.direction=direction;
			O->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (IDamageAble*)(O->GetNativeInterfaceAddress(UDamageAble::StaticClass())))
		{
			Parms.ReturnValue = I->Push_Implementation(direction);
		}
		return Parms.ReturnValue;
	}
	bool IDamageAble::Execute_ReceiveDamage(UObject* O, FDamageInformation const& damageInformation)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UDamageAble::StaticClass()));
		DamageAble_eventReceiveDamage_Parms Parms;
		UFunction* const Func = O->FindFunction(PROJECTXYZ_ReceiveDamage);
		if (Func)
		{
			Parms.damageInformation=damageInformation;
			O->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (IDamageAble*)(O->GetNativeInterfaceAddress(UDamageAble::StaticClass())))
		{
			Parms.ReturnValue = I->ReceiveDamage_Implementation(damageInformation);
		}
		return Parms.ReturnValue;
	}
	bool IDamageAble::Execute_Shock(UObject* O)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UDamageAble::StaticClass()));
		DamageAble_eventShock_Parms Parms;
		UFunction* const Func = O->FindFunction(PROJECTXYZ_Shock);
		if (Func)
		{
			O->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (IDamageAble*)(O->GetNativeInterfaceAddress(UDamageAble::StaticClass())))
		{
			Parms.ReturnValue = I->Shock_Implementation();
		}
		return Parms.ReturnValue;
	}
	void APlayerCharacterController::StaticRegisterNativesAPlayerCharacterController()
	{
		FNativeFunctionRegistrar::RegisterFunction(APlayerCharacterController::StaticClass(), "MoveToWaypoint",(Native)&APlayerCharacterController::execMoveToWaypoint);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCharacterController::StaticClass(), "TurnToWaypoint",(Native)&APlayerCharacterController::execTurnToWaypoint);
	}
	IMPLEMENT_CLASS(APlayerCharacterController, 3540927068);
	void AProjectXYZGameMode::StaticRegisterNativesAProjectXYZGameMode()
	{
	}
	IMPLEMENT_CLASS(AProjectXYZGameMode, 3111312368);
	void URockMovement::StaticRegisterNativesURockMovement()
	{
	}
	IMPLEMENT_CLASS(URockMovement, 1447452999);
	void AAoESpell::StaticRegisterNativesAAoESpell()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAoESpell::StaticClass(), "OnOverlapBegin",(Native)&AAoESpell::execOnOverlapBegin);
	}
	IMPLEMENT_CLASS(AAoESpell, 162728416);
	void ABeamSpell::StaticRegisterNativesABeamSpell()
	{
		FNativeFunctionRegistrar::RegisterFunction(ABeamSpell::StaticClass(), "calculateBeamHitPoints",(Native)&ABeamSpell::execcalculateBeamHitPoints);
	}
	IMPLEMENT_CLASS(ABeamSpell, 1690446899);
	void AChargeableSpell::StaticRegisterNativesAChargeableSpell()
	{
	}
	IMPLEMENT_CLASS(AChargeableSpell, 705957241);
	void ARockSpell::StaticRegisterNativesARockSpell()
	{
		FNativeFunctionRegistrar::RegisterFunction(ARockSpell::StaticClass(), "OnOverlapBegin",(Native)&ARockSpell::execOnOverlapBegin);
	}
	IMPLEMENT_CLASS(ARockSpell, 3066153471);
	void ALightningSpell::StaticRegisterNativesALightningSpell()
	{
	}
	IMPLEMENT_CLASS(ALightningSpell, 1023230250);
	void AMineUnit::StaticRegisterNativesAMineUnit()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMineUnit::StaticClass(), "OnOverlapBegin",(Native)&AMineUnit::execOnOverlapBegin);
		FNativeFunctionRegistrar::RegisterFunction(AMineUnit::StaticClass(), "OnOverlapEnd",(Native)&AMineUnit::execOnOverlapEnd);
	}
	IMPLEMENT_CLASS(AMineUnit, 259611739);
	void AMineSpell::StaticRegisterNativesAMineSpell()
	{
	}
	IMPLEMENT_CLASS(AMineSpell, 2668157087);
	void ASpraySpell::StaticRegisterNativesASpraySpell()
	{
	}
	IMPLEMENT_CLASS(ASpraySpell, 1118269778);
	void AStormSpell::StaticRegisterNativesAStormSpell()
	{
		FNativeFunctionRegistrar::RegisterFunction(AStormSpell::StaticClass(), "OnOverlapBegin",(Native)&AStormSpell::execOnOverlapBegin);
	}
	IMPLEMENT_CLASS(AStormSpell, 767133534);
	void AStormUnit::StaticRegisterNativesAStormUnit()
	{
		FNativeFunctionRegistrar::RegisterFunction(AStormUnit::StaticClass(), "OnOverlapBegin",(Native)&AStormUnit::execOnOverlapBegin);
	}
	IMPLEMENT_CLASS(AStormUnit, 3493483761);
	void UTools::StaticRegisterNativesUTools()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTools::StaticClass(), "CalculateFinalDamage",(Native)&UTools::execCalculateFinalDamage);
		FNativeFunctionRegistrar::RegisterFunction(UTools::StaticClass(), "OverlapCone",(Native)&UTools::execOverlapCone);
	}
	IMPLEMENT_CLASS(UTools, 3761055417);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTableRowBase();
	ENGINE_API class UClass* Z_Construct_UClass_UDataAsset();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTable_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UDataAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_UMovementComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionChannel();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();

	PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_ElementID();
	PROJECTXYZ_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageTable();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_USpellTable_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_USpellTable();
	PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_Status();
	PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_CharacterState();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_APlayerCharacter_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_APlayerCharacter();
	PROJECTXYZ_API class UEnum* Z_Construct_UEnum_ProjectXYZ_SpellType();
	PROJECTXYZ_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageInformation();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ASpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ASpell();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ACustomGameState_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ACustomGameState();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UDamageAble_CalculateDamageForElementID();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UDamageAble_KnockDown();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UDamageAble_Push();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UDamageAble_ReceiveDamage();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UDamageAble_Shock();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_UDamageAble_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_UDamageAble();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_APlayerCharacterController_MoveToWaypoint();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_APlayerCharacterController_TurnToWaypoint();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_APlayerCharacterController_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_APlayerCharacterController();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AProjectXYZGameMode_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AProjectXYZGameMode();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_URockMovement_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_URockMovement();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_AAoESpell_OnOverlapBegin();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AAoESpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AAoESpell();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_ABeamSpell_calculateBeamHitPoints();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ABeamSpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ABeamSpell();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AChargeableSpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AChargeableSpell();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_ARockSpell_OnOverlapBegin();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ARockSpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ARockSpell();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ALightningSpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ALightningSpell();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_AMineUnit_OnOverlapBegin();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_AMineUnit_OnOverlapEnd();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AMineUnit_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AMineUnit();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AMineSpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AMineSpell();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ASpraySpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_ASpraySpell();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_AStormSpell_OnOverlapBegin();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AStormSpell_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AStormSpell();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_AStormUnit_OnOverlapBegin();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AStormUnit_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_AStormUnit();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UTools_CalculateFinalDamage();
	PROJECTXYZ_API class UFunction* Z_Construct_UFunction_UTools_OverlapCone();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_UTools_NoRegister();
	PROJECTXYZ_API class UClass* Z_Construct_UClass_UTools();
	PROJECTXYZ_API class UPackage* Z_Construct_UPackage__Script_ProjectXYZ();
	UEnum* Z_Construct_UEnum_ProjectXYZ_ElementID()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ProjectXYZ();
		extern uint32 Get_Z_Construct_UEnum_ProjectXYZ_ElementID_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ElementID"), 0, Get_Z_Construct_UEnum_ProjectXYZ_ElementID_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ElementID"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Shield")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Earth")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Lightning")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Ice")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Death")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Life")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Steam")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Cold")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Fire")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Water")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::Null")), 10));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ElementID::ElementID_MAX")), 11));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ElementID");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Element.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ProjectXYZ_ElementID_CRC() { return 3401902372U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDamageTable()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_ProjectXYZ();
		extern uint32 Get_Z_Construct_UScriptStruct_FDamageTable_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DamageTable"), sizeof(FDamageTable), Get_Z_Construct_UScriptStruct_FDamageTable_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DamageTable"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTableRowBase(), new UScriptStruct::TCppStructOps<FDamageTable>, EStructFlags(0x00000001));
			UProperty* NewProp_I = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("I"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(I, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_T = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("T"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(T, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_F = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("F"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(F, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_D = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("D"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(D, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_S = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("S"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(S, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_A = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("A"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(A, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_R = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("R"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(R, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_W = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("W"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(W, FDamageTable), 0x0010000000000001);
			UProperty* NewProp_Q = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Q"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(Q, FDamageTable), 0x0010000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_I, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_I, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_T, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_T, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_F, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_F, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_D, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_D, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_S, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_S, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_A, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_A, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_R, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_R, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_W, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_W, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
			MetaData->SetValue(NewProp_Q, TEXT("Category"), TEXT("DamageTable"));
			MetaData->SetValue(NewProp_Q, TEXT("ModuleRelativePath"), TEXT("DamageTable.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDamageTable_CRC() { return 1891843614U; }
	UClass* Z_Construct_UClass_USpellTable_NoRegister()
	{
		return USpellTable::StaticClass();
	}
	UClass* Z_Construct_UClass_USpellTable()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UDataAsset();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = USpellTable::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_DamageTable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DamageTable"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DamageTable, USpellTable), 0x0010000000000001, Z_Construct_UClass_UDataTable_NoRegister());
				UProperty* NewProp_Spells = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Spells"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(Spells, USpellTable), 0x0014000000000015);
				UProperty* NewProp_Spells_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_Spells, TEXT("Spells_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000001);
				UProperty* NewProp_Spells_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_Spells, TEXT("Spells"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0004000000000001, Z_Construct_UClass_ASpell_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SpellTable.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("SpellTable.h"));
				MetaData->SetValue(NewProp_DamageTable, TEXT("Category"), TEXT("SpellTable"));
				MetaData->SetValue(NewProp_DamageTable, TEXT("ModuleRelativePath"), TEXT("SpellTable.h"));
				MetaData->SetValue(NewProp_Spells, TEXT("Category"), TEXT("SpellTable"));
				MetaData->SetValue(NewProp_Spells, TEXT("ModuleRelativePath"), TEXT("SpellTable.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_USpellTable(Z_Construct_UClass_USpellTable, &USpellTable::StaticClass, TEXT("USpellTable"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(USpellTable);
	UEnum* Z_Construct_UEnum_ProjectXYZ_Status()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ProjectXYZ();
		extern uint32 Get_Z_Construct_UEnum_ProjectXYZ_Status_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("Status"), 0, Get_Z_Construct_UEnum_ProjectXYZ_Status_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Status"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NORMAL")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("WET")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BURNING")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("COLD")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("Status_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("Status");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ProjectXYZ_Status_CRC() { return 3366415382U; }
	UEnum* Z_Construct_UEnum_ProjectXYZ_CharacterState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ProjectXYZ();
		extern uint32 Get_Z_Construct_UEnum_ProjectXYZ_CharacterState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("CharacterState"), 0, Get_Z_Construct_UEnum_ProjectXYZ_CharacterState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CharacterState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("NULL_STATE")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("READY")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_CHARGING")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_CHANNELING")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_HEALING")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_PLACING_SPELL")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_KNOCKED")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_PUSHED")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("BUSY_SHOCKED")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("CharacterState_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("CharacterState");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BUSY_CHARGING.ToolTip"), TEXT("ready to cast spell"));
			MetaData->SetValue(ReturnEnum, TEXT("BUSY_HEALING.ToolTip"), TEXT("beam and sprays"));
			MetaData->SetValue(ReturnEnum, TEXT("BUSY_KNOCKED.ToolTip"), TEXT("to block movement for a short period of time"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("used for delay-related mechanics"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ProjectXYZ_CharacterState_CRC() { return 3441624227U; }
	UClass* Z_Construct_UClass_APlayerCharacter_NoRegister()
	{
		return APlayerCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_APlayerCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = APlayerCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_database = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("database"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(database, APlayerCharacter), 0x0040000000000001, Z_Construct_UClass_UDataAsset_NoRegister());
				UProperty* NewProp_ScreenScale = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ScreenScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ScreenScale, APlayerCharacter), 0x0010000000000001);
				UProperty* NewProp_SmoothingTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SmoothingTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SmoothingTime, APlayerCharacter), 0x0010000000000001);
				UProperty* NewProp_camera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("camera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(camera, APlayerCharacter), 0x0010000000080009, Z_Construct_UClass_USceneComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PlayerCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
				MetaData->SetValue(NewProp_database, TEXT("Category"), TEXT("PlayerCharacter"));
				MetaData->SetValue(NewProp_database, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
				MetaData->SetValue(NewProp_ScreenScale, TEXT("Category"), TEXT("PlayerCharacter"));
				MetaData->SetValue(NewProp_ScreenScale, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
				MetaData->SetValue(NewProp_SmoothingTime, TEXT("Category"), TEXT("PlayerCharacter"));
				MetaData->SetValue(NewProp_SmoothingTime, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
				MetaData->SetValue(NewProp_camera, TEXT("Category"), TEXT("PlayerCharacter"));
				MetaData->SetValue(NewProp_camera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_camera, TEXT("ModuleRelativePath"), TEXT("PlayerCharacter.h"));
				MetaData->SetValue(NewProp_camera, TEXT("ToolTip"), TEXT("Called to bind functionality to input\nvirtual void SetupPlayerInputComponent(class UInputComponent* InputComponent) override;"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APlayerCharacter(Z_Construct_UClass_APlayerCharacter, &APlayerCharacter::StaticClass, TEXT("APlayerCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APlayerCharacter);
	UEnum* Z_Construct_UEnum_ProjectXYZ_SpellType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_ProjectXYZ();
		extern uint32 Get_Z_Construct_UEnum_ProjectXYZ_SpellType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("SpellType"), 0, Get_Z_Construct_UEnum_ProjectXYZ_SpellType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpellType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Spray")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::SteamSpray")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Projectile")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Rock")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Beam")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Lightning")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Mine")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Storm")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Wall")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::IceWall")), 9));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Aoe")), 10));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::Quake")), 11));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("SpellType::SpellType_MAX")), 12));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("SpellType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_ProjectXYZ_SpellType_CRC() { return 534293826U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDamageInformation()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_ProjectXYZ();
		extern uint32 Get_Z_Construct_UScriptStruct_FDamageInformation_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DamageInformation"), sizeof(FDamageInformation), Get_Z_Construct_UScriptStruct_FDamageInformation_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DamageInformation"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDamageInformation>, EStructFlags(0x00000001));
			UProperty* NewProp_RawDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RawDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(RawDamage, FDamageInformation), 0x0010000000000014);
			UProperty* NewProp_RawDamage_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RawDamage, TEXT("RawDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Charge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Charge"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Charge, FDamageInformation), 0x0010000000000004);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Type, FDamageInformation), 0x0010000000000014, Z_Construct_UEnum_ProjectXYZ_SpellType());
			UProperty* NewProp_Elements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Elements"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Elements, FDamageInformation), 0x0010000000000004);
			UProperty* NewProp_Elements_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Elements, TEXT("Elements"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UEnum_ProjectXYZ_ElementID());
			UProperty* NewProp_Causer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Causer"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Causer, FDamageInformation), 0x0014000000000004, Z_Construct_UClass_APlayerCharacter_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
			MetaData->SetValue(NewProp_RawDamage, TEXT("Category"), TEXT("DamageInformation"));
			MetaData->SetValue(NewProp_RawDamage, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
			MetaData->SetValue(NewProp_Charge, TEXT("Category"), TEXT("DamageInformation"));
			MetaData->SetValue(NewProp_Charge, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("DamageInformation"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
			MetaData->SetValue(NewProp_Elements, TEXT("Category"), TEXT("DamageInformation"));
			MetaData->SetValue(NewProp_Elements, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
			MetaData->SetValue(NewProp_Causer, TEXT("Category"), TEXT("DamageInformation"));
			MetaData->SetValue(NewProp_Causer, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDamageInformation_CRC() { return 758774374U; }
	UClass* Z_Construct_UClass_ASpell_NoRegister()
	{
		return ASpell::StaticClass();
	}
	UClass* Z_Construct_UClass_ASpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = ASpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_originPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("originPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(originPlayer, ASpell), 0x0024080000000004, Z_Construct_UClass_APlayerCharacter_NoRegister());
				UProperty* NewProp_damageInformation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("damageInformation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(damageInformation, ASpell), 0x0020080000000004, Z_Construct_UScriptStruct_FDamageInformation());
				UProperty* NewProp_database = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("database"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(database, ASpell), 0x0020080000000015, Z_Construct_UClass_UDataAsset_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Spell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
				MetaData->SetValue(NewProp_originPlayer, TEXT("Category"), TEXT("Spell"));
				MetaData->SetValue(NewProp_originPlayer, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
				MetaData->SetValue(NewProp_damageInformation, TEXT("Category"), TEXT("Spell"));
				MetaData->SetValue(NewProp_damageInformation, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
				MetaData->SetValue(NewProp_database, TEXT("Category"), TEXT("Spell"));
				MetaData->SetValue(NewProp_database, TEXT("ModuleRelativePath"), TEXT("Spell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASpell(Z_Construct_UClass_ASpell, &ASpell::StaticClass, TEXT("ASpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASpell);
	UClass* Z_Construct_UClass_ACustomGameState_NoRegister()
	{
		return ACustomGameState::StaticClass();
	}
	UClass* Z_Construct_UClass_ACustomGameState()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameState();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = ACustomGameState::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ValuesNormal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ValuesNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ValuesNormal, ACustomGameState), 0x0014000000000001);
				UProperty* NewProp_ValuesNormal_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ValuesNormal, TEXT("ValuesNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_ASpell_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_KeysNormal = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("KeysNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(KeysNormal, ACustomGameState), 0x0010000000000001);
				UProperty* NewProp_KeysNormal_Inner = new(EC_InternalUseOnlyConstructor, NewProp_KeysNormal, TEXT("KeysNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("CustomGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("CustomGameState.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_ValuesNormal, TEXT("Category"), TEXT("CustomGameState"));
				MetaData->SetValue(NewProp_ValuesNormal, TEXT("ModuleRelativePath"), TEXT("CustomGameState.h"));
				MetaData->SetValue(NewProp_KeysNormal, TEXT("Category"), TEXT("CustomGameState"));
				MetaData->SetValue(NewProp_KeysNormal, TEXT("ModuleRelativePath"), TEXT("CustomGameState.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ACustomGameState(Z_Construct_UClass_ACustomGameState, &ACustomGameState::StaticClass, TEXT("ACustomGameState"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ACustomGameState);
	UFunction* Z_Construct_UFunction_UDamageAble_CalculateDamageForElementID()
	{
		UObject* Outer=Z_Construct_UClass_UDamageAble();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CalculateDamageForElementID"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(DamageAble_eventCalculateDamageForElementID_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, DamageAble_eventCalculateDamageForElementID_Parms), 0x0010000000000580);
			UProperty* NewProp_rawDamage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rawDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(rawDamage, DamageAble_eventCalculateDamageForElementID_Parms), 0x0010000000000080);
			UProperty* NewProp_count = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("count"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(count, DamageAble_eventCalculateDamageForElementID_Parms), 0x0010000000000080);
			UProperty* NewProp_id = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("id"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(id, DamageAble_eventCalculateDamageForElementID_Parms), 0x0010000000000080, Z_Construct_UEnum_ProjectXYZ_ElementID());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Damage"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DamageAble.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called by CalculateFinalDamage. Calculates final damage of this particular element for the given spell. (See Tools/CalculateFinalDamage)\n       @param id - The Id of the element\n       @param count - The amount of occurences in the queue\n       @param rawDamage - the raw damage value of this ElementID;\n       @return The calculated damage value."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDamageAble_KnockDown()
	{
		UObject* Outer=Z_Construct_UClass_UDamageAble();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("KnockDown"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(DamageAble_eventKnockDown_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DamageAble_eventKnockDown_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DamageAble_eventKnockDown_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DamageAble_eventKnockDown_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Damage"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DamageAble.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Knocks this object down\n       @return - dummy value (see Interface docs)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDamageAble_Push()
	{
		UObject* Outer=Z_Construct_UClass_UDamageAble();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Push"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0CC20C00, 65535, sizeof(DamageAble_eventPush_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DamageAble_eventPush_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DamageAble_eventPush_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DamageAble_eventPush_Parms), sizeof(bool), true);
			UProperty* NewProp_direction = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("direction"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(direction, DamageAble_eventPush_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Damage"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DamageAble.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pushes this object\n       @param - The specified direction (doesn't have to be a normalized vector)\n       @return - dummy value (see Interface docs)"));
			MetaData->SetValue(NewProp_direction, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDamageAble_ReceiveDamage()
	{
		UObject* Outer=Z_Construct_UClass_UDamageAble();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReceiveDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C420C00, 65535, sizeof(DamageAble_eventReceiveDamage_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DamageAble_eventReceiveDamage_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DamageAble_eventReceiveDamage_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DamageAble_eventReceiveDamage_Parms), sizeof(bool), true);
			UProperty* NewProp_damageInformation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("damageInformation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(damageInformation, DamageAble_eventReceiveDamage_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FDamageInformation());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Damage"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DamageAble.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Applies damage to this object\n       @param damageInformation - the additional damageInformation about elemetns, raw damage values etc."));
			MetaData->SetValue(NewProp_damageInformation, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UDamageAble_Shock()
	{
		UObject* Outer=Z_Construct_UClass_UDamageAble();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Shock"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020C00, 65535, sizeof(DamageAble_eventShock_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, DamageAble_eventShock_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, DamageAble_eventShock_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, DamageAble_eventShock_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Damage"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("DamageAble.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Shocks this object\n       @return - dummy value; see Interface docs"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UDamageAble_NoRegister()
	{
		return UDamageAble::StaticClass();
	}
	UClass* Z_Construct_UClass_UDamageAble()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = UDamageAble::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;

				OuterClass->LinkChild(Z_Construct_UFunction_UDamageAble_CalculateDamageForElementID());
				OuterClass->LinkChild(Z_Construct_UFunction_UDamageAble_KnockDown());
				OuterClass->LinkChild(Z_Construct_UFunction_UDamageAble_Push());
				OuterClass->LinkChild(Z_Construct_UFunction_UDamageAble_ReceiveDamage());
				OuterClass->LinkChild(Z_Construct_UFunction_UDamageAble_Shock());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDamageAble_CalculateDamageForElementID(), "CalculateDamageForElementID"); // 3060855120
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDamageAble_KnockDown(), "KnockDown"); // 1712481748
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDamageAble_Push(), "Push"); // 4268870592
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDamageAble_ReceiveDamage(), "ReceiveDamage"); // 1255928735
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UDamageAble_Shock(), "Shock"); // 1163432299
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("DamageAble.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UDamageAble(Z_Construct_UClass_UDamageAble, &UDamageAble::StaticClass, TEXT("UDamageAble"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UDamageAble);
	UFunction* Z_Construct_UFunction_APlayerCharacterController_MoveToWaypoint()
	{
		UObject* Outer=Z_Construct_UClass_APlayerCharacterController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveToWaypoint"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MoveFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayerCharacterController_TurnToWaypoint()
	{
		struct PlayerCharacterController_eventTurnToWaypoint_Parms
		{
			float deltaTime;
		};
		UObject* Outer=Z_Construct_UClass_APlayerCharacterController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TurnToWaypoint"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayerCharacterController_eventTurnToWaypoint_Parms));
			UProperty* NewProp_deltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("deltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(deltaTime, PlayerCharacterController_eventTurnToWaypoint_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("MoveFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_APlayerCharacterController_NoRegister()
	{
		return APlayerCharacterController::StaticClass();
	}
	UClass* Z_Construct_UClass_APlayerCharacterController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = APlayerCharacterController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900284;

				OuterClass->LinkChild(Z_Construct_UFunction_APlayerCharacterController_MoveToWaypoint());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayerCharacterController_TurnToWaypoint());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MovementVector = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementVector"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MovementVector, APlayerCharacterController), 0x0010000000000014, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_MovementSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MovementSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MovementSpeed, APlayerCharacterController), 0x0010000000000001);
				UProperty* NewProp_TurnSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TurnSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TurnSpeed, APlayerCharacterController), 0x0010000000000001);
				UProperty* NewProp_Waypoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Waypoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Waypoint, APlayerCharacterController), 0x0010000000000014, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_Range = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Range"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Range, APlayerCharacterController), 0x0010000000000001);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayerCharacterController_MoveToWaypoint(), "MoveToWaypoint"); // 1861873308
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayerCharacterController_TurnToWaypoint(), "TurnToWaypoint"); // 4000181800
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PlayerCharacterController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
				MetaData->SetValue(NewProp_MovementVector, TEXT("Category"), TEXT("PlayerCharacterController"));
				MetaData->SetValue(NewProp_MovementVector, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
				MetaData->SetValue(NewProp_MovementSpeed, TEXT("Category"), TEXT("PlayerCharacterController"));
				MetaData->SetValue(NewProp_MovementSpeed, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
				MetaData->SetValue(NewProp_TurnSpeed, TEXT("Category"), TEXT("PlayerCharacterController"));
				MetaData->SetValue(NewProp_TurnSpeed, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
				MetaData->SetValue(NewProp_Waypoint, TEXT("Category"), TEXT("PlayerCharacterController"));
				MetaData->SetValue(NewProp_Waypoint, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
				MetaData->SetValue(NewProp_Range, TEXT("Category"), TEXT("PlayerCharacterController"));
				MetaData->SetValue(NewProp_Range, TEXT("ModuleRelativePath"), TEXT("PlayerCharacterController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APlayerCharacterController(Z_Construct_UClass_APlayerCharacterController, &APlayerCharacterController::StaticClass, TEXT("APlayerCharacterController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APlayerCharacterController);
	UClass* Z_Construct_UClass_AProjectXYZGameMode_NoRegister()
	{
		return AProjectXYZGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AProjectXYZGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AProjectXYZGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ProjectXYZGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("ProjectXYZGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AProjectXYZGameMode(Z_Construct_UClass_AProjectXYZGameMode, &AProjectXYZGameMode::StaticClass, TEXT("AProjectXYZGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AProjectXYZGameMode);
	UClass* Z_Construct_UClass_URockMovement_NoRegister()
	{
		return URockMovement::StaticClass();
	}
	UClass* Z_Construct_UClass_URockMovement()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovementComponent();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = URockMovement::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RockMovement.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("RockMovement.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_URockMovement(Z_Construct_UClass_URockMovement, &URockMovement::StaticClass, TEXT("URockMovement"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(URockMovement);
	UFunction* Z_Construct_UFunction_AAoESpell_OnOverlapBegin()
	{
		struct AoESpell_eventOnOverlapBegin_Parms
		{
			UPrimitiveComponent* OverlappedComp;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_AAoESpell();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapBegin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(AoESpell_eventOnOverlapBegin_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, AoESpell_eventOnOverlapBegin_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, AoESpell_eventOnOverlapBegin_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, AoESpell_eventOnOverlapBegin_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, AoESpell_eventOnOverlapBegin_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, AoESpell_eventOnOverlapBegin_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, AoESpell_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, AoESpell_eventOnOverlapBegin_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComp, AoESpell_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("AoESpell.h"));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AAoESpell_NoRegister()
	{
		return AAoESpell::StaticClass();
	}
	UClass* Z_Construct_UClass_AAoESpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AAoESpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AAoESpell_OnOverlapBegin());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_mesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(mesh, AAoESpell), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AAoESpell_OnOverlapBegin(), "OnOverlapBegin"); // 346794710
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("AoESpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("AoESpell.h"));
				MetaData->SetValue(NewProp_mesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_mesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_mesh, TEXT("ModuleRelativePath"), TEXT("AoESpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AAoESpell(Z_Construct_UClass_AAoESpell, &AAoESpell::StaticClass, TEXT("AAoESpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AAoESpell);
	UFunction* Z_Construct_UFunction_ABeamSpell_calculateBeamHitPoints()
	{
		struct BeamSpell_eventcalculateBeamHitPoints_Parms
		{
			TArray<int32> outPoints;
			AActor* hitActor;
			float maxReflectionBounces;
			float maxDistance;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ABeamSpell();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("calculateBeamHitPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04480401, 65535, sizeof(BeamSpell_eventcalculateBeamHitPoints_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, BeamSpell_eventcalculateBeamHitPoints_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, BeamSpell_eventcalculateBeamHitPoints_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, BeamSpell_eventcalculateBeamHitPoints_Parms), sizeof(bool), true);
			UProperty* NewProp_maxDistance = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("maxDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(maxDistance, BeamSpell_eventcalculateBeamHitPoints_Parms), 0x0010000000000080);
			UProperty* NewProp_maxReflectionBounces = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("maxReflectionBounces"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(maxReflectionBounces, BeamSpell_eventcalculateBeamHitPoints_Parms), 0x0010000000000080);
			UProperty* NewProp_hitActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hitActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(hitActor, BeamSpell_eventcalculateBeamHitPoints_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_outPoints = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(outPoints, BeamSpell_eventcalculateBeamHitPoints_Parms), 0x0010000000000180);
			UProperty* NewProp_outPoints_Inner = new(EC_InternalUseOnlyConstructor, NewProp_outPoints, TEXT("outPoints"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("NotReadyYet"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("BeamSpell.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ABeamSpell_NoRegister()
	{
		return ABeamSpell::StaticClass();
	}
	UClass* Z_Construct_UClass_ABeamSpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = ABeamSpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ABeamSpell_calculateBeamHitPoints());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ABeamSpell_calculateBeamHitPoints(), "calculateBeamHitPoints"); // 318457903
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BeamSpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BeamSpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ABeamSpell(Z_Construct_UClass_ABeamSpell, &ABeamSpell::StaticClass, TEXT("ABeamSpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ABeamSpell);
	UClass* Z_Construct_UClass_AChargeableSpell_NoRegister()
	{
		return AChargeableSpell::StaticClass();
	}
	UClass* Z_Construct_UClass_AChargeableSpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AChargeableSpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("ChargeableSpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("ChargeableSpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AChargeableSpell(Z_Construct_UClass_AChargeableSpell, &AChargeableSpell::StaticClass, TEXT("AChargeableSpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AChargeableSpell);
	UFunction* Z_Construct_UFunction_ARockSpell_OnOverlapBegin()
	{
		struct RockSpell_eventOnOverlapBegin_Parms
		{
			UPrimitiveComponent* OverlappedComp;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_ARockSpell();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapBegin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(RockSpell_eventOnOverlapBegin_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, RockSpell_eventOnOverlapBegin_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, RockSpell_eventOnOverlapBegin_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, RockSpell_eventOnOverlapBegin_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, RockSpell_eventOnOverlapBegin_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, RockSpell_eventOnOverlapBegin_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, RockSpell_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, RockSpell_eventOnOverlapBegin_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComp, RockSpell_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("RockSpell.h"));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ARockSpell_NoRegister()
	{
		return ARockSpell::StaticClass();
	}
	UClass* Z_Construct_UClass_ARockSpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AChargeableSpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = ARockSpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ARockSpell_OnOverlapBegin());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MaxRockDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxRockDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxRockDistance, ARockSpell), 0x0010000000000001);
				UProperty* NewProp_RockMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RockMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RockMesh, ARockSpell), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ARockSpell_OnOverlapBegin(), "OnOverlapBegin"); // 2798308560
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RockSpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("RockSpell.h"));
				MetaData->SetValue(NewProp_MaxRockDistance, TEXT("Category"), TEXT("RockSpell"));
				MetaData->SetValue(NewProp_MaxRockDistance, TEXT("ModuleRelativePath"), TEXT("RockSpell.h"));
				MetaData->SetValue(NewProp_RockMesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_RockMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_RockMesh, TEXT("ModuleRelativePath"), TEXT("RockSpell.h"));
				MetaData->SetValue(NewProp_RockMesh, TEXT("ToolTip"), TEXT("This are public because you can change it whenever you want"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ARockSpell(Z_Construct_UClass_ARockSpell, &ARockSpell::StaticClass, TEXT("ARockSpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ARockSpell);
	UClass* Z_Construct_UClass_ALightningSpell_NoRegister()
	{
		return ALightningSpell::StaticClass();
	}
	UClass* Z_Construct_UClass_ALightningSpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = ALightningSpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("LightningSpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("LightningSpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ALightningSpell(Z_Construct_UClass_ALightningSpell, &ALightningSpell::StaticClass, TEXT("ALightningSpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ALightningSpell);
	UFunction* Z_Construct_UFunction_AMineUnit_OnOverlapBegin()
	{
		struct MineUnit_eventOnOverlapBegin_Parms
		{
			UPrimitiveComponent* OverlappedComp;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_AMineUnit();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapBegin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(MineUnit_eventOnOverlapBegin_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, MineUnit_eventOnOverlapBegin_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, MineUnit_eventOnOverlapBegin_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, MineUnit_eventOnOverlapBegin_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, MineUnit_eventOnOverlapBegin_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, MineUnit_eventOnOverlapBegin_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, MineUnit_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, MineUnit_eventOnOverlapBegin_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComp, MineUnit_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MineUnit.h"));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AMineUnit_OnOverlapEnd()
	{
		struct MineUnit_eventOnOverlapEnd_Parms
		{
			UPrimitiveComponent* OverlappedComp;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
		};
		UObject* Outer=Z_Construct_UClass_AMineUnit();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(MineUnit_eventOnOverlapEnd_Parms));
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, MineUnit_eventOnOverlapEnd_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, MineUnit_eventOnOverlapEnd_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, MineUnit_eventOnOverlapEnd_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComp, MineUnit_eventOnOverlapEnd_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("MineUnit.h"));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AMineUnit_NoRegister()
	{
		return AMineUnit::StaticClass();
	}
	UClass* Z_Construct_UClass_AMineUnit()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AMineUnit::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AMineUnit_OnOverlapBegin());
				OuterClass->LinkChild(Z_Construct_UFunction_AMineUnit_OnOverlapEnd());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_mesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(mesh, AMineUnit), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMineUnit_OnOverlapBegin(), "OnOverlapBegin"); // 4201398377
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AMineUnit_OnOverlapEnd(), "OnOverlapEnd"); // 4123494400
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MineUnit.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MineUnit.h"));
				MetaData->SetValue(NewProp_mesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_mesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_mesh, TEXT("ModuleRelativePath"), TEXT("MineUnit.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMineUnit(Z_Construct_UClass_AMineUnit, &AMineUnit::StaticClass, TEXT("AMineUnit"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMineUnit);
	UClass* Z_Construct_UClass_AMineSpell_NoRegister()
	{
		return AMineSpell::StaticClass();
	}
	UClass* Z_Construct_UClass_AMineSpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AMineSpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_MineUnitBP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MineUnitBP"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(MineUnitBP, AMineSpell), 0x0014000000000001, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MineSpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("MineSpell.h"));
				MetaData->SetValue(NewProp_MineUnitBP, TEXT("Category"), TEXT("MineSpell"));
				MetaData->SetValue(NewProp_MineUnitBP, TEXT("ModuleRelativePath"), TEXT("MineSpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AMineSpell(Z_Construct_UClass_AMineSpell, &AMineSpell::StaticClass, TEXT("AMineSpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AMineSpell);
	UClass* Z_Construct_UClass_ASpraySpell_NoRegister()
	{
		return ASpraySpell::StaticClass();
	}
	UClass* Z_Construct_UClass_ASpraySpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = ASpraySpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("SpraySpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("SpraySpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ASpraySpell(Z_Construct_UClass_ASpraySpell, &ASpraySpell::StaticClass, TEXT("ASpraySpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ASpraySpell);
	UFunction* Z_Construct_UFunction_AStormSpell_OnOverlapBegin()
	{
		struct StormSpell_eventOnOverlapBegin_Parms
		{
			UPrimitiveComponent* OverlappedComp;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_AStormSpell();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapBegin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(StormSpell_eventOnOverlapBegin_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, StormSpell_eventOnOverlapBegin_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, StormSpell_eventOnOverlapBegin_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, StormSpell_eventOnOverlapBegin_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, StormSpell_eventOnOverlapBegin_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, StormSpell_eventOnOverlapBegin_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, StormSpell_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, StormSpell_eventOnOverlapBegin_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComp, StormSpell_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("StormSpell.h"));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AStormSpell_NoRegister()
	{
		return AStormSpell::StaticClass();
	}
	UClass* Z_Construct_UClass_AStormSpell()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ASpell();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AStormSpell::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AStormSpell_OnOverlapBegin());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_StormUnitBP = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StormUnitBP"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(StormUnitBP, AStormSpell), 0x0014000000000001, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_mesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(mesh, AStormSpell), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStormSpell_OnOverlapBegin(), "OnOverlapBegin"); // 2381440155
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StormSpell.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("StormSpell.h"));
				MetaData->SetValue(NewProp_StormUnitBP, TEXT("Category"), TEXT("StormSpell"));
				MetaData->SetValue(NewProp_StormUnitBP, TEXT("ModuleRelativePath"), TEXT("StormSpell.h"));
				MetaData->SetValue(NewProp_mesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_mesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_mesh, TEXT("ModuleRelativePath"), TEXT("StormSpell.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AStormSpell(Z_Construct_UClass_AStormSpell, &AStormSpell::StaticClass, TEXT("AStormSpell"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AStormSpell);
	UFunction* Z_Construct_UFunction_AStormUnit_OnOverlapBegin()
	{
		struct StormUnit_eventOnOverlapBegin_Parms
		{
			UPrimitiveComponent* OverlappedComp;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_AStormUnit();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnOverlapBegin"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(StormUnit_eventOnOverlapBegin_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, StormUnit_eventOnOverlapBegin_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, StormUnit_eventOnOverlapBegin_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, StormUnit_eventOnOverlapBegin_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, StormUnit_eventOnOverlapBegin_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, StormUnit_eventOnOverlapBegin_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, StormUnit_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, StormUnit_eventOnOverlapBegin_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_OverlappedComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OverlappedComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OverlappedComp, StormUnit_eventOnOverlapBegin_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("StormUnit.h"));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_OverlappedComp, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AStormUnit_NoRegister()
	{
		return AStormUnit::StaticClass();
	}
	UClass* Z_Construct_UClass_AStormUnit()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = AStormUnit::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AStormUnit_OnOverlapBegin());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_mesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("mesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(mesh, AStormUnit), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AStormUnit_OnOverlapBegin(), "OnOverlapBegin"); // 392345449
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("StormUnit.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("StormUnit.h"));
				MetaData->SetValue(NewProp_mesh, TEXT("Category"), TEXT("Mesh"));
				MetaData->SetValue(NewProp_mesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_mesh, TEXT("ModuleRelativePath"), TEXT("StormUnit.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AStormUnit(Z_Construct_UClass_AStormUnit, &AStormUnit::StaticClass, TEXT("AStormUnit"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AStormUnit);
	UFunction* Z_Construct_UFunction_UTools_CalculateFinalDamage()
	{
		struct Tools_eventCalculateFinalDamage_Parms
		{
			AActor* damageAbleObject;
			TArray<ElementID> elementKeys;
			TArray<int32> rawDamage;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UTools();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CalculateFinalDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(Tools_eventCalculateFinalDamage_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, Tools_eventCalculateFinalDamage_Parms), 0x0010000000000580);
			UProperty* NewProp_rawDamage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("rawDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(rawDamage, Tools_eventCalculateFinalDamage_Parms), 0x0010000008000182);
			UProperty* NewProp_rawDamage_Inner = new(EC_InternalUseOnlyConstructor, NewProp_rawDamage, TEXT("rawDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_elementKeys = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("elementKeys"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(elementKeys, Tools_eventCalculateFinalDamage_Parms), 0x0010000008000182);
			UProperty* NewProp_elementKeys_Inner = new(EC_InternalUseOnlyConstructor, NewProp_elementKeys, TEXT("elementKeys"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UEnum_ProjectXYZ_ElementID());
			UProperty* NewProp_damageAbleObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("damageAbleObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(damageAbleObject, Tools_eventCalculateFinalDamage_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tools"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Tools.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Function that calculates the final damage based on the elements int queue and the specific function implemented in damageAbleObject (see IDamageAble)\n       @param damageAbleObject - Object that implements IDamageAble; This function calls CalculateDamageForElementID on this object.\n       @param elementKeys - The queue basically.\n       @param rawDamage - The damage values in the DamageValueTable.\n       @return - final damage output to be applied."));
			MetaData->SetValue(NewProp_rawDamage, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_elementKeys, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UTools_OverlapCone()
	{
		struct Tools_eventOverlapCone_Parms
		{
			AActor* causer;
			TArray<AActor*> outHitresults;
			TEnumAsByte<ECollisionChannel> channel;
			float openingAngle;
			float length;
			TArray<AActor*> actorsToIgnore;
			bool ignoreCauser;
			bool traceComplex;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UTools();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OverlapCone"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04422401, 65535, sizeof(Tools_eventOverlapCone_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Tools_eventOverlapCone_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Tools_eventOverlapCone_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Tools_eventOverlapCone_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(traceComplex, Tools_eventOverlapCone_Parms, bool);
			UProperty* NewProp_traceComplex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("traceComplex"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(traceComplex, Tools_eventOverlapCone_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(traceComplex, Tools_eventOverlapCone_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ignoreCauser, Tools_eventOverlapCone_Parms, bool);
			UProperty* NewProp_ignoreCauser = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ignoreCauser"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ignoreCauser, Tools_eventOverlapCone_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ignoreCauser, Tools_eventOverlapCone_Parms), sizeof(bool), true);
			UProperty* NewProp_actorsToIgnore = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("actorsToIgnore"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(actorsToIgnore, Tools_eventOverlapCone_Parms), 0x0010000008000182);
			UProperty* NewProp_actorsToIgnore_Inner = new(EC_InternalUseOnlyConstructor, NewProp_actorsToIgnore, TEXT("actorsToIgnore"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_length = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("length"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(length, Tools_eventOverlapCone_Parms), 0x0010000000000080);
			UProperty* NewProp_openingAngle = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("openingAngle"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(openingAngle, Tools_eventOverlapCone_Parms), 0x0010000000000080);
			UProperty* NewProp_channel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("channel"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(channel, Tools_eventOverlapCone_Parms), 0x0010000000000080, Z_Construct_UEnum_Engine_ECollisionChannel());
			UProperty* NewProp_outHitresults = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("outHitresults"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(outHitresults, Tools_eventOverlapCone_Parms), 0x0010000000000180);
			UProperty* NewProp_outHitresults_Inner = new(EC_InternalUseOnlyConstructor, NewProp_outHitresults, TEXT("outHitresults"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_causer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("causer"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(causer, Tools_eventOverlapCone_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Tools"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Tools.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("RVO"));
			MetaData->SetValue(NewProp_actorsToIgnore, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UTools_NoRegister()
	{
		return UTools::StaticClass();
	}
	UClass* Z_Construct_UClass_UTools()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UBlueprintFunctionLibrary();
			Z_Construct_UPackage__Script_ProjectXYZ();
			OuterClass = UTools::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UTools_CalculateFinalDamage());
				OuterClass->LinkChild(Z_Construct_UFunction_UTools_OverlapCone());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTools_CalculateFinalDamage(), "CalculateFinalDamage"); // 1408842938
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UTools_OverlapCone(), "OverlapCone"); // 1416887333
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tools.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Tools.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UTools(Z_Construct_UClass_UTools, &UTools::StaticClass, TEXT("UTools"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UTools);
	UPackage* Z_Construct_UPackage__Script_ProjectXYZ()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/ProjectXYZ")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x73E7D7B7;
			Guid.B = 0x8521E08D;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
